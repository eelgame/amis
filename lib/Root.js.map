{
    "version": 3,
    "file": "Root.js",
    "sourceRoot": "",
    "sources": [
        "/src/Root.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import isPlainObject from 'lodash/isPlainObject';\nimport qs from 'qs';\nimport React from 'react';\nimport Alert from './components/Alert2';\nimport ImageGallery from './components/ImageGallery';\nimport {RendererEnv} from './env';\nimport {envOverwrite} from './envOverwrite';\nimport {RendererProps} from './factory';\nimport {LocaleContext, TranslateFn} from './locale';\nimport {RootRenderer} from './RootRenderer';\nimport {SchemaRenderer} from './SchemaRenderer';\nimport Scoped from './Scoped';\nimport {IRendererStore} from './store';\nimport {ThemeContext} from './theme';\nimport {Schema, SchemaNode} from './types';\nimport getExprProperties from './utils/filter-schema';\nimport {autobind, createObject, isEmpty} from './utils/helper';\nimport {RootStoreContext} from './WithRootStore';\n\nexport interface RootRenderProps {\n  location?: Location;\n  theme?: string;\n  [propName: string]: any;\n}\n\nexport interface RootProps {\n  schema: SchemaNode;\n  rootStore: IRendererStore;\n  env: RendererEnv;\n  theme: string;\n  pathPrefix?: string;\n  locale?: string;\n  translate?: TranslateFn;\n  [propName: string]: any;\n}\n\nexport class Root extends React.Component<RootProps> {\n  @autobind\n  resolveDefinitions(name: string) {\n    const definitions = (this.props.schema as Schema).definitions;\n    if (!name || isEmpty(definitions)) {\n      return {};\n    }\n    return definitions && definitions[name];\n  }\n\n  render() {\n    const {\n      schema,\n      rootStore,\n      env,\n      pathPrefix,\n      location,\n      data,\n      locale,\n      translate,\n      ...rest\n    } = this.props;\n\n    const theme = env.theme;\n\n    // 根据环境覆盖 schema，这个要在最前面做，不然就无法覆盖 validations\n    envOverwrite(schema, locale);\n\n    return (\n      <RootStoreContext.Provider value={rootStore}>\n        <ThemeContext.Provider value={this.props.theme || 'default'}>\n          <LocaleContext.Provider value={this.props.locale!}>\n            <ImageGallery modalContainer={env.getModalContainer}>\n              <RootRenderer\n                pathPrefix={pathPrefix || ''}\n                schema={\n                  isPlainObject(schema)\n                    ? {\n                        type: 'page',\n                        ...(schema as any)\n                      }\n                    : schema\n                }\n                {...rest}\n                rootStore={rootStore}\n                resolveDefinitions={this.resolveDefinitions}\n                location={location}\n                data={data}\n                env={env}\n                classnames={theme.classnames}\n                classPrefix={theme.classPrefix}\n                locale={locale}\n                translate={translate}\n              />\n            </ImageGallery>\n          </LocaleContext.Provider>\n        </ThemeContext.Provider>\n      </RootStoreContext.Provider>\n    );\n  }\n}\n\nexport interface renderChildProps extends Partial<RendererProps> {\n  env: RendererEnv;\n}\nexport type ReactElement = React.ReactNode[] | JSX.Element | null | false;\n\nexport function renderChildren(\n  prefix: string,\n  node: SchemaNode,\n  props: renderChildProps\n): ReactElement {\n  if (Array.isArray(node)) {\n    return node.map((node, index) =>\n      renderChild(`${prefix}/${index}`, node, {\n        ...props,\n        key: `${props.key ? `${props.key}-` : ''}${index}`\n      })\n    );\n  }\n\n  return renderChild(prefix, node, props);\n}\n\nexport function renderChild(\n  prefix: string,\n  node: SchemaNode,\n  props: renderChildProps\n): ReactElement {\n  if (Array.isArray(node)) {\n    return renderChildren(prefix, node, props);\n  }\n\n  const typeofnode = typeof node;\n  let schema: Schema =\n    typeofnode === 'string' || typeofnode === 'number'\n      ? {type: 'tpl', tpl: String(node)}\n      : (node as Schema);\n  const detectData =\n    schema &&\n    (schema.detectField === '&' ? props : props[schema.detectField || 'data']);\n  const exprProps = detectData\n    ? getExprProperties(schema, detectData, undefined, props)\n    : null;\n\n  if (\n    exprProps &&\n    (exprProps.hidden ||\n      exprProps.visible === false ||\n      schema.hidden ||\n      schema.visible === false ||\n      props.hidden ||\n      props.visible === false)\n  ) {\n    return null;\n  }\n\n  const transform = props.propsTransform;\n\n  if (transform) {\n    // @ts-ignore\n    delete props.propsTransform;\n    props = transform(props);\n  }\n\n  return (\n    <SchemaRenderer\n      {...props}\n      {...exprProps}\n      schema={schema}\n      $path={`${prefix ? `${prefix}/` : ''}${(schema && schema.type) || ''}`}\n    />\n  );\n}\n\nexport default Scoped(Root);\n"
    ]
}