{
    "version": 3,
    "file": "MonthRange.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/MonthRange.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,+BAAmE;AACnE,kEAA4B;AAC5B,uDAAkE;AAElE,+BAA6B;AAC7B,oEAE0C;AAE1C,+FAAiE;AA2EjE;IAA+C,6CAAgC;IAA/E;;IAuGA,CAAC;IAhGC,8CAAkB,GAAlB;QACQ,IAAA,KASF,IAAI,CAAC,KAAK,EARZ,YAAY,kBAAA,EACZ,iBAAiB,uBAAA,EACjB,SAAS,eAAA,EACT,MAAM,YAAA,EACN,IAAI,UAAA,EACJ,KAAK,WAAA,EACL,UAAU,gBAAA,EACV,GAAG,SACS,CAAC;QAEf,IAAI,YAAY,IAAI,KAAK,KAAK,YAAY,EAAE;YAC1C,IAAI,GAAG,GACL,OAAO,YAAY,KAAK,QAAQ;gBAC9B,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC;gBAC/B,CAAC,CAAC,YAAY,CAAC;YACnB,iBAAiB,CACf,iCAAmB,CAAC,WAAW,CAC7B;gBACE,SAAS,EAAE,wBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC;gBAC3C,OAAO,EAAE,wBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC;aAC1C,EACD,MAAM,EACN,UAAU,EACV,SAAS,EACT,GAAG,CACJ,CACF,CAAC;SACH;IACH,CAAC;IAED,8CAAkB,GAAlB,UAAmB,SAA0B;QACrC,IAAA,KAQF,IAAI,CAAC,KAAK,EAPZ,YAAY,kBAAA,EACZ,SAAS,eAAA,EACT,UAAU,gBAAA,EACV,iBAAiB,uBAAA,EACjB,IAAI,UAAA,EACJ,GAAG,SAAA,EACH,MAAM,YACM,CAAC;QAEf,IAAI,SAAS,CAAC,YAAY,KAAK,YAAY,EAAE;YAC3C,IAAI,GAAG,GACL,OAAO,YAAY,KAAK,QAAQ;gBAC9B,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC;gBAC/B,CAAC,CAAC,YAAY,CAAC;YAEnB,iBAAiB,CACf,GAAG;gBACD,CAAC,CAAC,iCAAmB,CAAC,WAAW,CAC7B;oBACE,SAAS,EAAE,wBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC;oBAC3C,OAAO,EAAE,wBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC;iBAC1C,EACD,MAAM,EACN,UAAU,EACV,SAAS,EACT,GAAG,CACJ;gBACH,CAAC,CAAC,SAAS,CACd,CAAC;SACH;IACH,CAAC;IAED,kCAAM,GAAN;QACE,IAAM,KAYF,IAAI,CAAC,KAAK,EAXZ,SAAS,eAAA,EACI,EAAE,iBAAA,EACf,YAAY,kBAAA,EACZ,WAAW,iBAAA,EACX,OAAO,aAAA,EACP,OAAO,aAAA,EACP,WAAW,iBAAA,EACX,WAAW,iBAAA,EACX,IAAI,UAAA,EACJ,MAAM,YAAA,EACH,IAAI,sBAXH,iIAYL,CAAa,CAAC;QAEf,OAAO,CACL,uCAAK,SAAS,EAAE,oBAAE,CAAI,EAAE,qBAAkB,EAAE,SAAS,CAAC;YACpD,8BAAC,0BAAgB,uBACX,IAAI,IACR,WAAW,EAAE,EAAE,EACf,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,wBAAU,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,EAChE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,wBAAU,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,EAChE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,2BAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EACjE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,2BAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,IACjE,CACE,CACP,CAAC;IACJ,CAAC;IArGM,8BAAY,GAAG;QACpB,MAAM,EAAE,GAAG;QACX,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,GAAG;KACf,CAAC;IAkGJ,wBAAC;CAAA,AAvGD,CAA+C,eAAK,CAAC,SAAS,GAuG7D;kBAvGoB,iBAAiB;AA4GtC;IAA+C,qDAAiB;IAAhE;;IAKA,CAAC;IAJQ,sCAAY,yCACd,iBAAiB,CAAC,YAAY,KACjC,UAAU,EAAE,EAAE,IACd;IAJS,yBAAyB;QAHrC,eAAQ,CAAC;YACR,IAAI,EAAE,aAAa;SACpB,CAAC;OACW,yBAAyB,CAKrC;IAAD,gCAAC;CAAA,AALD,CAA+C,iBAAiB,GAK/D;AALY,8DAAyB",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport {filterDate, parseDuration} from '../../utils/tpl-builtin';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport DateRangePicker, {\n  DateRangePicker as BaseDateRangePicker\n} from '../../components/DateRangePicker';\nimport {anyChanged} from '../../utils/helper';\nimport MonthRangePicker from '../../components/MonthRangePicker';\n\n/**\n * MonthRange 月范围控件\n * 文档：https://baidu.gitee.io/amis/docs/components/form/month-range\n */\nexport interface MonthRangeControlSchema extends FormBaseControl {\n  /**\n   * 指定为日期范围控件\n   */\n  type: 'month-range';\n\n  /**\n   * 分割符, 因为有两个值，开始时间和结束时间，所以要有连接符。默认为英文逗号。\n   *\n   */\n  delimiter?: string;\n\n  /**\n   * 默认 `X` 即时间戳格式，用来提交的时间格式。更多格式类型请参考 moment.\n   */\n  format?: string;\n\n  /**\n   * 默认 `YYYY-MM` 用来配置显示的时间格式。\n   */\n  inputFormat?: string;\n\n  /**\n   * 开启后将选中的选项 value 的值用连接符拼接起来，作为当前表单项的值。如： `value1,value2` 否则为 `[value1, value2]`\n   */\n  joinValues?: boolean;\n\n  /**\n   * 最大日期限制，支持变量 $xxx 来取值，或者用相对值如：* `-2mins` 2分钟前\\n * `+2days` 2天后\\n* `-10week` 十周前\\n可用单位： `min`、`hour`、`day`、`week`、`month`、`year`。所有单位支持复数形式。\n   */\n  maxDate?: string;\n\n  /**\n   * 最小日期限制，支持变量 $xxx 来取值，或者用相对值如：* `-2mins` 2分钟前\\n * `+2days` 2天后\\n* `-10week` 十周前\\n可用单位： `min`、`hour`、`day`、`week`、`month`、`year`。所有单位支持复数形式。\n   */\n  minDate?: string;\n\n  /**\n   * 最大跨度，比如 2days\n   */\n  maxDuration?: string;\n\n  /**\n   * 最小跨度，比如 2days\n   */\n  minDuration?: string;\n\n  /**\n   * 这里面 value 需要特殊说明一下，因为支持相对值。* `-2mins` 2分钟前\\n * `+2days` 2天后\\n* `-10week` 十周前\\n可用单位： `min`、`hour`、`day`、`week`、`month`、`year`。所有单位支持复数形式。\n   */\n  value?: any;\n\n  /**\n   * 开启后变成非弹出模式，即内联模式。\n   */\n  embed?: boolean;\n}\n\nexport interface MonthRangeProps\n  extends FormControlProps,\n    Omit<\n      MonthRangeControlSchema,\n      'type' | 'className' | 'descriptionClassName' | 'inputClassName'\n    > {\n  delimiter: string;\n  format: string;\n  joinValues: boolean;\n}\n\nexport default class MonthRangeControl extends React.Component<MonthRangeProps> {\n  static defaultProps = {\n    format: 'X',\n    joinValues: true,\n    delimiter: ','\n  };\n\n  componentWillMount() {\n    const {\n      defaultValue,\n      setPrinstineValue,\n      delimiter,\n      format,\n      data,\n      value,\n      joinValues,\n      utc\n    } = this.props;\n\n    if (defaultValue && value === defaultValue) {\n      let arr =\n        typeof defaultValue === 'string'\n          ? defaultValue.split(delimiter)\n          : defaultValue;\n      setPrinstineValue(\n        BaseDateRangePicker.formatValue(\n          {\n            startDate: filterDate(arr[0], data, format),\n            endDate: filterDate(arr[1], data, format)\n          },\n          format,\n          joinValues,\n          delimiter,\n          utc\n        )\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps: MonthRangeProps) {\n    const {\n      defaultValue,\n      delimiter,\n      joinValues,\n      setPrinstineValue,\n      data,\n      utc,\n      format\n    } = this.props;\n\n    if (prevProps.defaultValue !== defaultValue) {\n      let arr =\n        typeof defaultValue === 'string'\n          ? defaultValue.split(delimiter)\n          : defaultValue;\n\n      setPrinstineValue(\n        arr\n          ? BaseDateRangePicker.formatValue(\n              {\n                startDate: filterDate(arr[0], data, format),\n                endDate: filterDate(arr[1], data, format)\n              },\n              format,\n              joinValues,\n              delimiter,\n              utc\n            )\n          : undefined\n      );\n    }\n  }\n\n  render() {\n    const {\n      className,\n      classPrefix: ns,\n      defaultValue,\n      defaultData,\n      minDate,\n      maxDate,\n      minDuration,\n      maxDuration,\n      data,\n      format,\n      ...rest\n    } = this.props;\n\n    return (\n      <div className={cx(`${ns}DateRangeControl`, className)}>\n        <MonthRangePicker\n          {...rest}\n          classPrefix={ns}\n          data={data}\n          format={format}\n          minDate={minDate ? filterDate(minDate, data, format) : undefined}\n          maxDate={maxDate ? filterDate(maxDate, data, format) : undefined}\n          minDuration={minDuration ? parseDuration(minDuration) : undefined}\n          maxDuration={maxDuration ? parseDuration(maxDuration) : undefined}\n        />\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'month-range'\n})\nexport class MonthRangeControlRenderer extends MonthRangeControl {\n  static defaultProps = {\n    ...MonthRangeControl.defaultProps,\n    timeFormat: ''\n  };\n}\n"
    ]
}