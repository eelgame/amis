{
    "version": 3,
    "file": "Tabs.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Tabs.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {isPlainObject} from 'lodash';\nimport find from 'lodash/find';\nimport React from 'react';\nimport {Renderer, RendererProps} from '../../factory';\nimport {Schema} from '../../types';\nimport Tabs, {TabSchema, TabsSchema} from '../Tabs';\nimport {FormBaseControl, FormControlSchema} from './Item';\n\nexport type TabControlSchema = TabSchema & {\n  /**\n   * Tab 值, 当作为表当项使用时，这个值可以写入到表单中。\n   */\n  value?: string;\n\n  /**\n   * 表单项集合\n   */\n  controls?: Array<FormControlSchema>;\n\n  /**\n   * @deprecated 请用类型 tabs\n   */\n  tabs?: any;\n\n  /**\n   * @deprecated 请用类型 fieldSet\n   */\n  fieldSet?: any;\n};\n\n/**\n * Tabs\n * 文档：https://baidu.gitee.io/amis/docs/components/form/tabs\n */\nexport interface TabsControlSchema\n  extends FormBaseControl,\n    Omit<TabsSchema, 'tabs'> {\n  type: 'tabs';\n\n  /**\n   * 如果配置了名称，Tabs 的打开项会同步写入变量中。\n   */\n  name?: string;\n  tabs: Array<TabControlSchema>;\n}\n\nexport interface TabsProps extends RendererProps {}\n\n@Renderer({\n  test: /(^|\\/)form(?:.+)?\\/control\\/tabs$/i,\n  weight: -100,\n  name: 'tabs-control'\n})\nexport class TabsRenderer extends Tabs {\n  static defaultProps = {\n    mountOnEnter: false // form 中的不按需渲染\n  };\n  static propsList: Array<string> = ['onChange', 'tabs'];\n\n  renderTab = (tab: any, props: any, key: number) => {\n    const {\n      renderFormItems,\n      formMode,\n      formHorizontal,\n      $path,\n      render,\n      classnames: cx\n    } = this.props;\n\n    if (\n      renderFormItems &&\n      !tab.type &&\n      (tab.controls || tab.fieldSet || tab.tabs)\n    ) {\n      return (\n        <div className={cx(`Form--${tab.mode || formMode || 'normal'}`)}>\n          {renderFormItems(\n            tab,\n            `${($path as string).replace(/^.*form\\//, '')}/${key}`,\n            {\n              mode: tab.mode || formMode,\n              horizontal: tab.horizontal || formHorizontal\n            }\n          )}\n        </div>\n      );\n    }\n\n    return render(`tab/${key}`, tab.body || tab.tab || tab);\n  };\n\n  resolveTabByKey(key: any) {\n    const tabs = this.props.tabs;\n\n    if (!Array.isArray(tabs)) {\n      return;\n    }\n\n    return find(tabs, (tab: TabSchema, index) =>\n      tab.hash ? tab.hash === key : index === key\n    );\n  }\n\n  resolveKeyByValue(value: any) {\n    const tabs = this.props.tabs;\n\n    if (!Array.isArray(tabs)) {\n      return;\n    }\n\n    const tab: TabSchema = find(\n      tabs,\n      tab => ((tab as TabControlSchema).value ?? tab.title) === value\n    ) as TabSchema;\n\n    return tab && tab.hash ? tab.hash : tabs.indexOf(tab);\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    const {name, value, onChange, source, tabs} = this.props;\n\n    // 如果没有配置 name ，说明不需要同步表单值\n    if (\n      !name ||\n      typeof onChange !== 'function' ||\n      // 如果关联某个变量数据，则不启用\n      source\n    ) {\n      return;\n    }\n\n    //  如果有值，切到对应的 tab\n    if (value && Array.isArray(tabs)) {\n      const key = this.resolveKeyByValue(value);\n      key !== undefined && this.handleSelect(key);\n    } else {\n      const tab = this.resolveTabByKey(this.activeKey);\n      if (tab && value !== ((tab as TabControlSchema).value ?? tab.title)) {\n        onChange((tab as TabControlSchema).value ?? tab.title);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps: TabsProps, prevState: any) {\n    super.componentDidUpdate(prevProps as any, prevState);\n\n    const {name, value, onChange, source, tabs} = this.props;\n\n    // 如果没有配置 name ，说明不需要同步表单值\n    if (\n      !name ||\n      typeof onChange !== 'function' ||\n      // 如果关联某个变量数据，则不启用\n      source\n    ) {\n      return;\n    }\n\n    let key: any;\n    if (\n      value !== prevProps.value &&\n      (key = this.resolveKeyByValue(value)) !== undefined &&\n      key !== this.activeKey\n    ) {\n      this.handleSelect(key);\n    } else if (this.activeKey !== prevState.activeKey) {\n      const tab = this.resolveTabByKey(this.activeKey);\n      if (tab && value !== ((tab as TabControlSchema).value ?? tab.title)) {\n        onChange((tab as TabControlSchema).value ?? tab.title);\n      }\n    }\n  }\n}\n"
    ]
}