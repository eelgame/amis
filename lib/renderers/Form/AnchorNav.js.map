{
    "version": 3,
    "file": "AnchorNav.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/AnchorNav.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,yCAAsD;AACtD,mEAAgF;AA6BhF;IAAuC,6CAAS;IAAhD;QAAA,qEAiCC;QA3BC,mBAAa,GAAG,UAAC,OAAY,EAAE,KAAU,EAAE,GAAW;YAC9C,IAAA,KAOF,KAAI,CAAC,KAAK,EANZ,eAAe,qBAAA,EACf,QAAQ,cAAA,EACR,cAAc,oBAAA,EACd,KAAK,WAAA,EACL,MAAM,YAAA,EACM,EAAE,gBACF,CAAC;YACf,QAAQ,CAAC;YACT,IAAI,eAAe,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,QAAQ,EAAE;gBACxD,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,YAAS,QAAQ,IAAI,QAAQ,CAAE,CAAC,IAChD,eAAe,CACd,OAAO,EACH,KAAgB,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,SAAI,GAAK,EACtD;oBACE,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE,cAAc;iBAC3B,CACF,CACG,CACP,CAAC;aACH;YAED,OAAO,MAAM,CAAC,aAAW,GAAK,EAAE,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC;QAC3D,CAAC,CAAC;;IACJ,CAAC;IAhCQ,8BAAY,GAAG;QACpB,YAAY,EAAE,KAAK,CAAC,eAAe;KACpC,CAAC;IACK,2BAAS,GAAkB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IAJ7C,iBAAiB;QAL7B,kBAAQ,CAAC;YACR,IAAI,EAAE,0CAA0C;YAChD,MAAM,EAAE,CAAC,GAAG;YACZ,IAAI,EAAE,oBAAoB;SAC3B,CAAC;OACW,iBAAiB,CAiC7B;IAAD,wBAAC;CAAA,AAjCD,CAAuC,mBAAS,GAiC/C;AAjCY,8CAAiB",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../../factory';\nimport AnchorNav, {AnchorNavSectionSchema, AnchorNavSchema} from '../AnchorNav';\nimport {FormBaseControl, FormControlSchema} from './Item';\n\nexport type AnchorNavSectionControlSchema = AnchorNavSectionSchema & {\n  /**\n   * 表单项集合\n   */\n  controls?: Array<FormControlSchema>;\n};\n\n/**\n * AnchorNav\n * 文档：https://baidu.gitee.io/amis/docs/components/form/anchor-nav\n */\nexport interface AnchorNavControlSchema\n  extends FormBaseControl,\n    Omit<AnchorNavSchema, 'links'> {\n  type: 'anchor-nav';\n\n  links: Array<AnchorNavSectionControlSchema>;\n}\n\nexport interface AnchorNavProps extends RendererProps {}\n\n@Renderer({\n  test: /(^|\\/)form(?:.+)?\\/control\\/anchor-nav$/i,\n  weight: -100,\n  name: 'anchor-nav-control'\n})\nexport class AnchorNavRenderer extends AnchorNav {\n  static defaultProps = {\n    mountOnEnter: false // form 中的不按需渲染\n  };\n  static propsList: Array<string> = ['onChange', 'links'];\n\n  renderSection = (section: any, props: any, key: number) => {\n    const {\n      renderFormItems,\n      formMode,\n      formHorizontal,\n      $path,\n      render,\n      classnames: cx\n    } = this.props;\n    debugger;\n    if (renderFormItems && !section.type && section.controls) {\n      return (\n        <div className={cx(`Form--${formMode || 'normal'}`)}>\n          {renderFormItems(\n            section,\n            `${($path as string).replace(/^.*form\\//, '')}/${key}`,\n            {\n              mode: formMode,\n              horizontal: formHorizontal\n            }\n          )}\n        </div>\n      );\n    }\n\n    return render(`section/${key}`, section.body || section);\n  };\n}\n"
    ]
}