{
    "version": 3,
    "file": "Flex.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Flex.tsx"
    ],
    "names": [],
    "mappings": ";AAAA;;GAEG;;;;AAEH,wDAA0B;AAC1B,sCAAmD;AAoGnD;IAAkC,gCAAkC;IAQlE,cAAY,KAAgB;eAC1B,kBAAM,KAAK,CAAC;IACd,CAAC;IAED,qBAAM,GAAN;QACQ,IAAA,KASF,IAAI,CAAC,KAAK,EARZ,KAAK,WAAA,EACL,SAAS,eAAA,EACT,OAAO,aAAA,EACP,UAAU,gBAAA,EACV,YAAY,kBAAA,EACZ,KAAK,WAAA,EACL,MAAM,YAAA,EACN,SAAS,eACG,CAAC;QAEf,IAAM,SAAS,sBACb,OAAO,EAAE,MAAM,EACf,aAAa,EAAE,SAAS,EACxB,cAAc,EAAE,OAAO,EACvB,UAAU,YAAA;YACV,YAAY,cAAA,IACT,KAAK,CACT,CAAC;QAEF,OAAO,CACL,uCAAK,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,IACxC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,GAAG,IAAK,OAAA,MAAM,CAAC,cAAY,GAAK,EAAE,IAAI,CAAC,EAA/B,CAA+B,CAAC,CACtD,CACP,CAAC;IACJ,CAAC;IArCM,iBAAY,GAAuB;QACxC,SAAS,EAAE,KAAK;QAChB,OAAO,EAAE,QAAQ;QACjB,UAAU,EAAE,QAAQ;QACpB,YAAY,EAAE,QAAQ;KACvB,CAAC;IAiCJ,WAAC;CAAA,AAvCD,CAAkC,eAAK,CAAC,SAAS,GAuChD;kBAvCoB,IAAI;AA6CzB;IAAkC,wCAAI;IAAtC;;IAAwC,CAAC;IAA5B,YAAY;QAJxB,kBAAQ,CAAC;YACR,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE,MAAM;SACb,CAAC;OACW,YAAY,CAAgB;IAAD,mBAAC;CAAA,AAAzC,CAAkC,IAAI,GAAG;AAA5B,oCAAY",
    "sourcesContent": [
        "/**\n * @file 简化版 Flex 布局，主要用于不熟悉 CSS 的开发者\n */\n\nimport React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {Schema} from '../types';\nimport {BaseSchema, SchemaObject} from '../Schema';\n\nexport type FlexItemProps = {\n  /**\n   * 宽度\n   */\n  width?: number;\n\n  /**\n   * 高度\n   */\n  height?: number;\n\n  /**\n   * 这个 Flex 的布局\n   */\n  align: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';\n\n  /**\n   * 自定义样式\n   */\n  style?: {\n    [propName: string]: any;\n  };\n};\n\nexport type FlexItem = FlexItemProps & SchemaObject;\n\n/**\n * Flex 布局\n * 文档：https://baidu.gitee.io/amis/docs/components/flex\n */\nexport interface FlexSchema extends BaseSchema {\n  /**\n   * 指定为 flex 展示类型\n   */\n  type: 'flex';\n\n  /**\n   * 水平分布\n   */\n  justify?:\n    | 'start'\n    | 'flex-start'\n    | 'center'\n    | 'end'\n    | 'flex-end'\n    | 'space-around'\n    | 'space-between'\n    | 'space-evenly';\n\n  /**\n   * 垂直布局\n   */\n  alignItems?:\n    | 'stretch'\n    | 'start'\n    | 'flex-start'\n    | 'flex-end'\n    | 'end'\n    | 'center'\n    | 'baseline';\n\n  /**\n   * 多行情况下的垂直分布\n   */\n  alignContent?:\n    | 'normal'\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n    | 'stretch';\n\n  /**\n   * 方向\n   */\n  direction?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n\n  /**\n   * 每个 flex 的设置\n   */\n  items: Array<FlexItem>;\n\n  /**\n   * 自定义样式\n   */\n  style?: {\n    [propName: string]: any;\n  };\n}\n\nexport interface FlexProps\n  extends RendererProps,\n    Omit<FlexSchema, 'type' | 'className'> {}\n\nexport default class Flex extends React.Component<FlexProps, object> {\n  static defaultProps: Partial<FlexProps> = {\n    direction: 'row',\n    justify: 'center',\n    alignItems: 'center',\n    alignContent: 'center'\n  };\n\n  constructor(props: FlexProps) {\n    super(props);\n  }\n\n  render() {\n    const {\n      items,\n      direction,\n      justify,\n      alignItems,\n      alignContent,\n      style,\n      render,\n      className\n    } = this.props;\n\n    const flexStyle = {\n      display: 'flex',\n      flexDirection: direction,\n      justifyContent: justify,\n      alignItems,\n      alignContent,\n      ...style\n    };\n\n    return (\n      <div style={flexStyle} className={className}>\n        {items.map((item, key) => render(`flexItem/${key}`, item))}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)flex$/,\n  name: 'flex'\n})\nexport class FlexRenderer extends Flex {}\n"
    ]
}