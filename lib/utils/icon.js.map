{
    "version": 3,
    "file": "icon.js",
    "sourceRoot": "",
    "sources": [
        "/src/utils/icon.tsx"
    ],
    "names": [],
    "mappings": ";AAAA;;GAEG;;;;AAEH,wDAA0B;AAG1B;;;;;GAKG;AACU,QAAA,YAAY,GAAG,UAC1B,EAAgB,EAChB,IAAa,EACb,SAAkB,EAClB,aAAsB;IAEtB,IAAM,SAAS,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAC,GAAG,OAAM,CAAC,CAAC,CAAC;IAE5C,OAAO,IAAI,CAAC,CAAC,CAAC,CACZ,SAAS,CAAC,CAAC,CAAC,CACV,uCAAK,SAAS,EAAE,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,EAAE,IAAI,GAAI,CAC5D,CAAC,CAAC,CAAC,CACF,qCAAG,SAAS,EAAE,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,aAAa,CAAC,GAAI,CACrD,CACF,CAAC,CAAC,CAAC,IAAI,CAAC;AACX,CAAC,CAAC",
    "sourcesContent": [
        "/**\n * @file 图标支持的公共方法，主要是支持自动识别地址和 icon-font\n */\n\nimport React from 'react';\nimport {ClassNamesFn} from '../theme';\n\n/**\n * 判断字符串来生成 i 或 img\n * @param icon icon 设置\n * @param className 内部用的 className\n * @param classNameProp amis 配置里设置的 className\n */\nexport const generateIcon = (\n  cx: ClassNamesFn,\n  icon?: string,\n  className?: string,\n  classNameProp?: string\n) => {\n  const isURLIcon = icon?.indexOf('.') !== -1;\n\n  return icon ? (\n    isURLIcon ? (\n      <img className={cx(className, classNameProp)} src={icon} />\n    ) : (\n      <i className={cx(className, icon, classNameProp)} />\n    )\n  ) : null;\n};\n"
    ]
}