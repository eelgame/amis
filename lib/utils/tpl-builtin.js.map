{
    "version": 3,
    "file": "tpl-builtin.js",
    "sourceRoot": "",
    "sources": [
        "/src/utils/tpl-builtin.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import moment from 'moment';\nimport {PlainObject} from '../types';\nimport isPlainObject from 'lodash/isPlainObject';\nimport groupBy from 'lodash/groupBy';\nimport {\n  createObject,\n  isObject,\n  setVariable,\n  qsstringify,\n  keyToPath,\n  string2regExp\n} from './helper';\nimport {Enginer} from './tpl';\nimport uniqBy from 'lodash/uniqBy';\nimport uniq from 'lodash/uniq';\n\nconst UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\nexport const prettyBytes = (num: number) => {\n  if (!Number.isFinite(num)) {\n    throw new TypeError(`Expected a finite number, got ${typeof num}: ${num}`);\n  }\n\n  const neg = num < 0;\n\n  if (neg) {\n    num = -num;\n  }\n\n  if (num < 1) {\n    return (neg ? '-' : '') + num + ' B';\n  }\n\n  const exponent = Math.min(\n    Math.floor(Math.log(num) / Math.log(1000)),\n    UNITS.length - 1\n  );\n  const numStr = Number((num / Math.pow(1000, exponent)).toPrecision(3));\n  const unit = UNITS[exponent];\n\n  return (neg ? '-' : '') + numStr + ' ' + unit;\n};\n\nconst entityMap: {\n  [propName: string]: string;\n} = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nexport const escapeHtml = (str: string) =>\n  String(str).replace(/[&<>\"'\\/]/g, function (s) {\n    return entityMap[s];\n  });\n\nexport function formatDuration(value: number): string {\n  const unit = ['秒', '分', '时', '天', '月', '季', '年'];\n  const steps = [1, 60, 3600, 86400, 2592000, 7776000, 31104000];\n  let len = steps.length;\n  const parts = [];\n\n  while (len--) {\n    if (steps[len] && value >= steps[len]) {\n      parts.push(Math.floor(value / steps[len]) + unit[len]);\n      value %= steps[len];\n    } else if (len === 0 && value) {\n      parts.push((value.toFixed ? value.toFixed(2) : '0') + unit[0]);\n    }\n  }\n\n  return parts.join('');\n}\n\nfunction makeSorter(\n  key: string,\n  method?: 'alpha' | 'numerical',\n  order?: 'desc' | 'asc'\n) {\n  return function (a: any, b: any) {\n    if (!a || !b) {\n      return 0;\n    }\n\n    const va = resolveVariable(key, a);\n    const vb = resolveVariable(key, b);\n    let result = 0;\n\n    if (method === 'numerical') {\n      result = (parseFloat(va) || 0) - (parseFloat(vb) || 0);\n    } else {\n      result = String(va).localeCompare(String(vb));\n    }\n\n    return result * (order === 'desc' ? -1 : 1);\n  };\n}\n\nconst timeUnitMap: {\n  [propName: string]: string;\n} = {\n  year: 'Y',\n  month: 'M',\n  week: 'w',\n  weekday: 'W',\n  day: 'd',\n  hour: 'h',\n  minute: 'm',\n  min: 'm',\n  second: 's',\n  millisecond: 'ms'\n};\n\nexport const relativeValueRe = /^(.+)?(\\+|-)(\\d+)(minute|min|hour|day|week|month|year|weekday|second|millisecond)s?$/i;\nexport const filterDate = (\n  value: string,\n  data: object = {},\n  format = 'X',\n  utc: boolean = false\n): moment.Moment => {\n  let m,\n    mm = utc ? moment.utc : moment;\n\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n\n  value = tokenize(value, data);\n\n  if (value && typeof value === 'string' && (m = relativeValueRe.exec(value))) {\n    const date = new Date();\n    const step = parseInt(m[3], 10);\n    const from = m[1]\n      ? filterDate(m[1], data, format, utc)\n      : mm(\n          /(minute|min|hour|second)s?/.test(m[4])\n            ? [\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                date.getHours(),\n                date.getMinutes(),\n                date.getSeconds()\n              ]\n            : [date.getFullYear(), date.getMonth(), date.getDate()]\n        );\n\n    return m[2] === '-'\n      ? from.subtract(step, timeUnitMap[m[4]] as moment.DurationInputArg2)\n      : from.add(step, timeUnitMap[m[4]] as moment.DurationInputArg2);\n    //   return from[m[2] === '-' ? 'subtract' : 'add'](step, mapping[m[4]] || m[4]);\n  } else if (value === 'now') {\n    return mm();\n  } else if (value === 'today') {\n    const date = new Date();\n    return mm([date.getFullYear(), date.getMonth(), date.getDate()]);\n  } else {\n    return mm(value, format);\n  }\n};\n\nexport function parseDuration(str: string): moment.Duration | undefined {\n  const matches = /^((?:\\-|\\+)?(?:\\d*\\.)?\\d+)(minute|min|hour|day|week|month|year|weekday|second|millisecond)s?$/.exec(\n    str\n  );\n\n  if (matches) {\n    const duration = moment.duration(parseFloat(matches[1]), matches[2] as any);\n\n    if (moment.isDuration(duration)) {\n      return duration;\n    }\n  }\n\n  return;\n}\n\nexport const filters: {\n  [propName: string]: (input: any, ...args: any[]) => any;\n} = {\n  html: (input: string) => escapeHtml(input),\n  json: (input, tabSize: number | string = 2) =>\n    tabSize\n      ? JSON.stringify(input, null, parseInt(tabSize as string, 10))\n      : JSON.stringify(input),\n  toJson: input => {\n    let ret;\n    try {\n      ret = JSON.parse(input);\n    } catch (e) {\n      ret = null;\n    }\n    return ret;\n  },\n  toInt: input => (typeof input === 'string' ? parseInt(input, 10) : input),\n  toFloat: input => (typeof input === 'string' ? parseFloat(input) : input),\n  raw: input => input,\n  now: () => new Date(),\n  toDate: (input: any, inputFormat = '') => {\n    const data = moment(input, inputFormat);\n    data.add();\n    return data.isValid() ? data.toDate() : undefined;\n  },\n  dateModify: (\n    input: any,\n    modifier: 'add' | 'subtract' | 'endOf' | 'startOf' = 'add',\n    amount = 0,\n    unit = 'days'\n  ) => {\n    if (!(input instanceof Date)) {\n      input = new Date();\n    }\n\n    if (modifier === 'endOf' || modifier === 'startOf') {\n      return moment(input)\n        [modifier === 'endOf' ? 'endOf' : 'startOf'](amount || 'day')\n        .toDate();\n    }\n\n    return moment(input)\n      [modifier === 'add' ? 'add' : 'subtract'](parseInt(amount, 10) || 0, unit)\n      .toDate();\n  },\n  date: (input, format = 'LLL', inputFormat = 'X') =>\n    moment(input, inputFormat).format(format),\n  number: input => {\n    let parts = String(input).split('.');\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return parts.join('.');\n  },\n  trim: input => (typeof input === 'string' ? input.trim() : input),\n  percent: (input, decimals = 0) => {\n    input = parseFloat(input) || 0;\n    decimals = parseInt(decimals, 10) || 0;\n\n    let whole = input * 100;\n    let multiplier = Math.pow(10, decimals);\n\n    return (\n      (Math.round(whole * multiplier) / multiplier).toFixed(decimals) + '%'\n    );\n  },\n  duration: input => (input ? formatDuration(input) : input),\n  bytes: input => (input ? prettyBytes(parseFloat(input)) : input),\n  round: (input, decimals = 2) => {\n    if (isNaN(input)) {\n      return 0;\n    }\n\n    decimals = parseInt(decimals, 10) ?? 2;\n\n    let multiplier = Math.pow(10, decimals);\n    return (Math.round(input * multiplier) / multiplier).toFixed(decimals);\n  },\n  truncate: (input, length, end) => {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    end = end || '...';\n\n    if (length == null) {\n      return input;\n    }\n\n    length = parseInt(length, 10) || 200;\n\n    return input.substring(0, length) + (input.length > length ? end : '');\n  },\n  url_encode: input => encodeURIComponent(input),\n  url_decode: input => decodeURIComponent(input),\n  default: (input, defaultValue, strict = false) =>\n    (strict ? input : input ? input : undefined) ??\n    (() => {\n      try {\n        if (defaultValue === 'undefined') {\n          return undefined;\n        }\n\n        return JSON.parse(defaultValue);\n      } catch (e) {\n        return defaultValue;\n      }\n    })(),\n  join: (input, glue) => (input && input.join ? input.join(glue) : input),\n  split: (input, delimiter = ',') =>\n    typeof input === 'string' ? input.split(delimiter) : input,\n  sortBy: (\n    input: any,\n    key: string,\n    method: 'alpha' | 'numerical' = 'alpha',\n    order?: 'asc' | 'desc'\n  ) =>\n    Array.isArray(input) ? input.sort(makeSorter(key, method, order)) : input,\n  unique: (input: any, key?: string) =>\n    Array.isArray(input) ? (key ? uniqBy(input, key) : uniq(input)) : input,\n  topAndOther: (\n    input: any,\n    len: number = 10,\n    labelField: string = 'name',\n    restLabel = '其他'\n  ) => {\n    if (Array.isArray(input) && len) {\n      const grouped = groupBy(input, (item: any) => {\n        const index = input.indexOf(item) + 1;\n        return index >= len ? len : index;\n      });\n\n      return Object.keys(grouped).map((key, index) => {\n        const group = grouped[key];\n        const obj = group.reduce((obj, item) => {\n          Object.keys(item).forEach(key => {\n            if (!obj.hasOwnProperty(key) || key === 'labelField') {\n              obj[key] = item[key];\n            } else if (\n              typeof item[key] === 'number' &&\n              typeof obj[key] === 'number'\n            ) {\n              obj[key] += item[key];\n            } else if (\n              typeof item[key] === 'string' &&\n              /^(?:\\-|\\.)\\d/.test(item[key]) &&\n              typeof obj[key] === 'number'\n            ) {\n              obj[key] += parseFloat(item[key]) || 0;\n            } else if (\n              typeof item[key] === 'string' &&\n              typeof obj[key] === 'string'\n            ) {\n              obj[key] += `, ${item[key]}`;\n            } else {\n              obj[key] = item[key];\n            }\n          });\n\n          return obj;\n        }, {});\n\n        if (index === len - 1) {\n          obj[labelField] = restLabel || '其他';\n        }\n        return obj;\n      });\n    }\n    return input;\n  },\n  first: input => input && input[0],\n  nth: (input, nth = 0) => input && input[nth],\n  last: input => input && (input.length ? input[input.length - 1] : null),\n  minus: (input, step = 1) => (parseInt(input, 10) || 0) - parseInt(step, 10),\n  plus: (input, step = 1) => (parseInt(input, 10) || 0) + parseInt(step, 10),\n  count: (input: any) =>\n    Array.isArray(input) || typeof input === 'string' ? input.length : 0,\n  sum: (input, field) =>\n    Array.isArray(input)\n      ? input.reduce(\n          (sum, item) =>\n            sum + (parseFloat(field ? pickValues(field, item) : item) || 0),\n          0\n        )\n      : input,\n  abs: (input: any) => (typeof input === 'number' ? Math.abs(input) : input),\n  pick: (input, path = '&') =>\n    Array.isArray(input) && !/^\\d+$/.test(path)\n      ? input.map((item, index) =>\n          pickValues(path, createObject({index}, item))\n        )\n      : pickValues(path, input),\n  pick_if_exist: (input, path = '&') =>\n    Array.isArray(input)\n      ? input.map(item => resolveVariable(path, item) || item)\n      : resolveVariable(path, input) || input,\n  str2date: function (input, inputFormat = 'X', outputFormat = 'X') {\n    return input\n      ? filterDate(input, this, inputFormat).format(outputFormat)\n      : '';\n  },\n  asArray: input => (Array.isArray(input) ? input : input ? [input] : input),\n  concat(input, ...args: any[]) {\n    return Array.isArray(input)\n      ? input.concat(...args.map(arg => getStrOrVariable(arg, this)))\n      : input;\n  },\n  filter: function (input, keys, expOrDirective, arg1) {\n    if (!Array.isArray(input) || !keys || !expOrDirective) {\n      return input;\n    }\n\n    let directive = expOrDirective;\n    let fn: (value: any, key: string, item: any) => boolean = () => true;\n\n    if (directive === 'isTrue') {\n      fn = value => !!value;\n    } else if (directive === 'isFalse') {\n      fn = value => !value;\n    } else if (directive === 'isExists') {\n      fn = value => typeof value !== 'undefined';\n    } else if (directive === 'equals' || directive === 'equal') {\n      arg1 = arg1 ? getStrOrVariable(arg1, this) : '';\n      fn = value => arg1 == value;\n    } else if (directive === 'isIn') {\n      let list: any = arg1 ? getStrOrVariable(arg1, this) : [];\n\n      list = str2array(list);\n      list = Array.isArray(list) ? list : list ? [list] : [];\n      fn = value => (list.length ? !!~list.indexOf(value) : true);\n    } else if (directive === 'notIn') {\n      let list: Array<any> = arg1 ? getStrOrVariable(arg1, this) : [];\n      list = str2array(list);\n      list = Array.isArray(list) ? list : list ? [list] : [];\n      fn = value => !~list.indexOf(value);\n    } else {\n      if (directive !== 'match') {\n        directive = 'match';\n        arg1 = expOrDirective;\n      }\n      arg1 = arg1 ? getStrOrVariable(arg1, this) : '';\n\n      // 比对的值是空时直接返回。\n      if (!arg1) {\n        return input;\n      }\n\n      let reg = string2regExp(`${arg1}`, false);\n      fn = value => reg.test(String(value));\n    }\n\n    keys = keys.split(/\\s*,\\s*/);\n    return input.filter((item: any) =>\n      keys.some((key: string) => fn(resolveVariable(key, item), key, item))\n    );\n  },\n  base64Encode(str) {\n    return btoa(\n      encodeURIComponent(str).replace(\n        /%([0-9A-F]{2})/g,\n        function toSolidBytes(match, p1) {\n          return String.fromCharCode(('0x' + p1) as any);\n        }\n      )\n    );\n  },\n\n  base64Decode(str) {\n    return decodeURIComponent(\n      atob(str)\n        .split('')\n        .map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join('')\n    );\n  },\n\n  lowerCase: input =>\n    input && typeof input === 'string' ? input.toLowerCase() : input,\n  upperCase: input =>\n    input && typeof input === 'string' ? input.toUpperCase() : input,\n\n  isTrue(input, trueValue, falseValue) {\n    return getConditionValue(input, !!input, trueValue, falseValue, this);\n  },\n  isFalse(input, trueValue, falseValue) {\n    return getConditionValue(input, !input, trueValue, falseValue, this);\n  },\n  isMatch(input, matchArg, trueValue, falseValue) {\n    matchArg = getStrOrVariable(matchArg, this as any);\n    return getConditionValue(\n      input,\n      matchArg && string2regExp(`${matchArg}`, false).test(String(input)),\n      trueValue,\n      falseValue,\n      this\n    );\n  },\n  notMatch(input, matchArg, trueValue, falseValue) {\n    matchArg = getStrOrVariable(matchArg, this as any);\n    return getConditionValue(\n      input,\n      matchArg && !string2regExp(`${matchArg}`, false).test(String(input)),\n      trueValue,\n      falseValue,\n      this\n    );\n  },\n  isEquals(input, equalsValue, trueValue, falseValue) {\n    equalsValue = /^\\d+$/.test(equalsValue)\n      ? parseInt(equalsValue, 10)\n      : getStrOrVariable(equalsValue, this as any);\n    return getConditionValue(\n      input,\n      input === equalsValue,\n      trueValue,\n      falseValue,\n      this\n    );\n  },\n  notEquals(input, equalsValue, trueValue, falseValue) {\n    equalsValue = /^\\d+$/.test(equalsValue)\n      ? parseInt(equalsValue, 10)\n      : getStrOrVariable(equalsValue, this as any);\n    return getConditionValue(\n      input,\n      input !== equalsValue,\n      trueValue,\n      falseValue,\n      this\n    );\n  }\n};\n\n/**\n * 如果当前传入字符为：'xxx'或者\"xxx\"，则返回字符xxx\n * 否则去数据域中，获取变量xxx\n *\n * @param value 传入字符\n * @param data 数据域\n */\nfunction getStrOrVariable(value: string, data: any) {\n  return /^('|\")(.*)\\1$/.test(value)\n    ? RegExp.$2\n    : /^-?\\d+$/.test(value)\n    ? parseInt(value, 10)\n    : /^(-?\\d+)\\.\\d+?$/.test(value)\n    ? parseFloat(value)\n    : /^\\[.*\\]$/.test(value)\n    ? value\n        .substring(1, value.length - 1)\n        .split(/\\s*,\\s*/)\n        .filter(item => item)\n    : /,/.test(value)\n    ? value.split(/\\s*,\\s*/).filter(item => item)\n    : resolveVariable(value, data);\n}\n\nfunction str2array(list: any) {\n  if (list && typeof list === 'string') {\n    if (/^\\[.*\\]$/.test(list)) {\n      return list\n        .substring(1, list.length - 1)\n        .split(/\\s*,\\s*/)\n        .filter(item => item);\n    } else {\n      return list.split(/\\s*,\\s*/).filter(item => item);\n    }\n  }\n  return list;\n}\n\nfunction getConditionValue(\n  input: string,\n  isTrue: boolean,\n  trueValue: string,\n  falseValue: string,\n  data: any\n) {\n  return isTrue || (!isTrue && falseValue)\n    ? getStrOrVariable(isTrue ? trueValue : falseValue, data)\n    : input;\n}\n\nexport function registerFilter(\n  name: string,\n  fn: (input: any, ...args: any[]) => any\n): void {\n  filters[name] = fn;\n}\n\nexport function getFilters() {\n  return filters;\n}\n\nexport function pickValues(names: string, data: object) {\n  let arr: Array<string>;\n  if (!names || ((arr = names.split(',')) && arr.length < 2)) {\n    let idx = names.indexOf('~');\n    if (~idx) {\n      let key = names.substring(0, idx);\n      let target = names.substring(idx + 1);\n      return {\n        [key]: resolveVariable(target, data)\n      };\n    }\n    return resolveVariable(names, data);\n  }\n\n  let ret: any = {};\n  arr.forEach(name => {\n    let idx = name.indexOf('~');\n    let target = name;\n\n    if (~idx) {\n      target = name.substring(idx + 1);\n      name = name.substring(0, idx);\n    }\n\n    setVariable(ret, name, resolveVariable(target, data));\n  });\n  return ret;\n}\n\nexport const resolveVariable = (path?: string, data: any = {}): any => {\n  if (!path || !data) {\n    return undefined;\n  }\n\n  if (path === '$$') {\n    return data;\n  } else if (path[0] === '$') {\n    path = path.substring(1);\n  } else if (path === '&') {\n    return data;\n  }\n\n  if (typeof data[path] !== 'undefined') {\n    return data[path];\n  }\n\n  let parts = keyToPath(path.replace(/^{|}$/g, ''));\n  return parts.reduce((data, path) => {\n    if ((isObject(data) || Array.isArray(data)) && path in data) {\n      return (data as {[propName: string]: any})[path];\n    }\n\n    return undefined;\n  }, data);\n};\n\nexport const isPureVariable = (path?: any) =>\n  typeof path === 'string'\n    ? /^\\$(?:([a-z0-9_.]+)|{[^}{]+})$/.test(path)\n    : false;\n\nexport const resolveVariableAndFilter = (\n  path?: string,\n  data: object = {},\n  defaultFilter: string = '| html',\n  fallbackValue = (value: any) => value\n): any => {\n  if (!path) {\n    return undefined;\n  }\n\n  const m = /^(\\\\)?\\$(?:([a-z0-9_.]+)|{([\\s\\S]+)})$/i.exec(path);\n\n  if (!m) {\n    return undefined;\n  }\n\n  const [_, escape, key, key2] = m;\n\n  // 如果是转义如： `\\$abc` => `$abc`\n  if (escape) {\n    return _.substring(1);\n  }\n\n  let finalKey: string = key || key2;\n\n  // 先只支持一层吧\n  finalKey = finalKey.replace(\n    /(\\\\|\\\\\\$)?\\$(?:([a-zA-Z0-9_.]+)|{([^}{]+)})/g,\n    (_, escape) => {\n      return escape\n        ? _.substring(1)\n        : resolveVariableAndFilter(_, data, defaultFilter);\n    }\n  );\n\n  // 默认 html 转义\n  if (!~finalKey.indexOf('|')) {\n    finalKey += defaultFilter;\n  }\n\n  let paths = finalKey.split(/\\s*\\|\\s*/g);\n  let originalKey = finalKey;\n  finalKey = paths.shift() as string;\n\n  let ret = resolveVariable(finalKey, data);\n\n  let prevConInputChanged = false; // 前一个类三元过滤器生效，则跳过后续类三元过滤器\n\n  return ret == null &&\n    !~originalKey.indexOf('default') &&\n    !~originalKey.indexOf('now')\n    ? fallbackValue(ret)\n    : paths.reduce((input, filter) => {\n        let params = filter\n          .replace(\n            /([^\\\\])\\\\([\\:\\\\])/g,\n            (_, affix, content) =>\n              `${affix}__${content === ':' ? 'colon' : 'slash'}__`\n          )\n          .split(':')\n          .map(item =>\n            item.replace(/__(slash|colon)__/g, (_, type) =>\n              type === 'colon' ? ':' : '\\\\'\n            )\n          );\n        let key = params.shift() as string;\n\n        if (\n          ~[\n            'isTrue',\n            'isFalse',\n            'isMatch',\n            'isEquals',\n            'notMatch',\n            'notEquals'\n          ].indexOf(key)\n        ) {\n          if (prevConInputChanged) {\n            return input;\n          } else {\n            const result = filters[key].call(data, input, ...params);\n            prevConInputChanged = result !== input;\n            return result;\n          }\n        } else {\n          // 后面再遇到非类三元filter就重置了吧，不影响再后面的其他三元filter\n          prevConInputChanged = false;\n        }\n\n        return (filters[key] || filters.raw).call(data, input, ...params);\n      }, ret);\n};\n\nexport const tokenize = (\n  str: string,\n  data: object,\n  defaultFilter: string = '| html'\n) => {\n  if (!str || typeof str !== 'string') {\n    return str;\n  }\n\n  return str.replace(\n    /(\\\\)?\\$(?:([a-z0-9_\\.]+|&|\\$)|{([^}{]+?)})/gi,\n    (_, escape, key1, key2, index, source) => {\n      if (!escape && key1 === '$') {\n        const prefix = source[index - 1];\n        return prefix === '='\n          ? encodeURIComponent(JSON.stringify(data))\n          : qsstringify(data);\n      }\n\n      return escape\n        ? _.substring(1)\n        : resolveVariableAndFilter(_, data, defaultFilter) ?? '';\n    }\n  );\n};\n\nfunction resolveMapping(\n  value: any,\n  data: PlainObject,\n  defaultFilter = '| raw'\n) {\n  return typeof value === 'string' && isPureVariable(value)\n    ? resolveVariableAndFilter(value, data, defaultFilter, () => '')\n    : typeof value === 'string' && ~value.indexOf('$')\n    ? tokenize(value, data, defaultFilter)\n    : value;\n}\n\nexport function dataMapping(\n  to: any,\n  from: PlainObject,\n  ignoreFunction: boolean | ((key: string, value: any) => boolean) = false\n): any {\n  if (Array.isArray(to)) {\n    return to.map(item => dataMapping(item, from, ignoreFunction));\n  } else if (typeof to === 'string') {\n    return resolveMapping(to, from);\n  } else if (!isPlainObject(to)) {\n    return to;\n  }\n\n  let ret = {};\n  Object.keys(to).forEach(key => {\n    const value = to[key];\n    let keys: Array<string>;\n\n    if (typeof ignoreFunction === 'function' && ignoreFunction(key, value)) {\n      // 如果被ignore，不做数据映射处理。\n      (ret as PlainObject)[key] = value;\n    } else if (key === '&' && value === '$$') {\n      ret = {\n        ...ret,\n        ...from\n      };\n    } else if (key === '&') {\n      const v =\n        isPlainObject(value) &&\n        (keys = Object.keys(value)) &&\n        keys.length === 1 &&\n        from[keys[0].substring(1)] &&\n        Array.isArray(from[keys[0].substring(1)])\n          ? from[keys[0].substring(1)].map((raw: object) =>\n              dataMapping(\n                value[keys[0]],\n                createObject(from, raw),\n                ignoreFunction\n              )\n            )\n          : resolveMapping(value, from);\n\n      if (Array.isArray(v) || typeof v === 'string') {\n        ret = v;\n      } else if (typeof v === 'function') {\n        ret = {\n          ...ret,\n          ...v(from)\n        };\n      } else {\n        ret = {\n          ...ret,\n          ...v\n        };\n      }\n    } else if (value === '$$') {\n      (ret as PlainObject)[key] = from;\n    } else if (value && value[0] === '$') {\n      const v = resolveMapping(value, from);\n      (ret as PlainObject)[key] = v;\n\n      if (v === '__undefined') {\n        delete (ret as PlainObject)[key];\n      }\n    } else if (\n      isPlainObject(value) &&\n      (keys = Object.keys(value)) &&\n      keys.length === 1 &&\n      from[keys[0].substring(1)] &&\n      Array.isArray(from[keys[0].substring(1)])\n    ) {\n      // 支持只取数组中的部分值这个需求\n      // 如:\n      // data: {\n      //   items: {\n      //     '$rows': {\n      //        id: '$id',\n      //        forum_id: '$forum_id'\n      //      }\n      //   }\n      // }\n      const arr = from[keys[0].substring(1)];\n      const mapping = value[keys[0]];\n\n      (ret as PlainObject)[key] = arr.map((raw: object) =>\n        dataMapping(mapping, createObject(from, raw), ignoreFunction)\n      );\n    } else if (isPlainObject(value)) {\n      (ret as PlainObject)[key] = dataMapping(value, from, ignoreFunction);\n    } else if (Array.isArray(value)) {\n      (ret as PlainObject)[key] = value.map((value: any) =>\n        isPlainObject(value)\n          ? dataMapping(value, from, ignoreFunction)\n          : resolveMapping(value, from)\n      );\n    } else if (typeof value == 'string' && ~value.indexOf('$')) {\n      (ret as PlainObject)[key] = resolveMapping(value, from);\n    } else if (typeof value === 'function' && ignoreFunction !== true) {\n      (ret as PlainObject)[key] = value(from);\n    } else {\n      (ret as PlainObject)[key] = value;\n\n      if (value === '__undefined') {\n        delete (ret as PlainObject)[key];\n      }\n    }\n  });\n\n  return ret;\n}\n\nexport function register(): Enginer & {name: string} {\n  return {\n    name: 'builtin',\n    test: (str: string) => !!~str.indexOf('$'),\n    compile: (str: string, data: object, defaultFilter = '| html') =>\n      tokenize(str, data, defaultFilter)\n  };\n}\n"
    ]
}