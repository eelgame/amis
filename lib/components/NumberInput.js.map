{
    "version": 3,
    "file": "NumberInput.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/NumberInput.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,aAAa;AACb,4EAA0C;AAC1C,kCAA+C;AAc/C;IAAiC,uCAAiC;IAAlE;;IA0CA,CAAC;IArCC,4BAAM,GAAN;QACQ,IAAA,KAaF,IAAI,CAAC,KAAK,EAZZ,SAAS,eAAA,EACI,EAAE,iBAAA,EACH,EAAE,gBAAA,EACd,KAAK,WAAA,EACL,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,GAAG,SAAA,EACH,GAAG,SAAA,EACH,QAAQ,cAAA,EACR,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,SAAS,eACG,CAAC;QAEf,IAAI,cAAc,GAAQ,EAAE,CAAC;QAE7B,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,cAAc,CAAC,SAAS,GAAG,SAAS,CAAC;SACtC;QAED,OAAO,CACL,8BAAC,yBAAW,qBACV,SAAS,EAAE,EAAE,CAAC,SAAS,EAAE,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAC/D,SAAS,EAAK,EAAE,WAAQ,EACxB,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,GAAG,EACR,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,WAAW,IACpB,cAAc,EAClB,CACH,CAAC;IACJ,CAAC;IAxCM,wBAAY,GAAG;QACpB,IAAI,EAAE,CAAC;KACR,CAAC;IAuCJ,kBAAC;CAAA,AA1CD,CAAiC,eAAK,CAAC,SAAS,GA0C/C;AA1CY,kCAAW;AA4CxB,kBAAe,iBAAS,CAAC,WAAW,CAAC,CAAC",
    "sourcesContent": [
        "import React from 'react';\n// @ts-ignore\nimport InputNumber from 'rc-input-number';\nimport {ThemeProps, themeable} from '../theme';\n\nexport interface NumberProps extends ThemeProps {\n  placeholder?: string;\n  max?: number;\n  min?: number;\n  step?: number;\n  showSteps?: boolean;\n  precision?: number;\n  disabled?: boolean;\n  value?: number;\n  onChange?: (value: number) => void;\n}\n\nexport class NumberInput extends React.Component<NumberProps, any> {\n  static defaultProps = {\n    step: 1\n  };\n\n  render(): JSX.Element {\n    const {\n      className,\n      classPrefix: ns,\n      classnames: cx,\n      value,\n      step,\n      precision,\n      max,\n      min,\n      disabled,\n      placeholder,\n      onChange,\n      showSteps\n    } = this.props;\n\n    let precisionProps: any = {};\n\n    if (typeof precision === 'number') {\n      precisionProps.precision = precision;\n    }\n\n    return (\n      <InputNumber\n        className={cx(className, showSteps === false ? 'no-steps' : '')}\n        prefixCls={`${ns}Number`}\n        value={value}\n        step={step}\n        max={max}\n        min={min}\n        onChange={onChange}\n        disabled={disabled}\n        placeholder={placeholder}\n        {...precisionProps}\n      />\n    );\n  }\n}\n\nexport default themeable(NumberInput);\n"
    ]
}