{
    "version": 3,
    "file": "QuartersView.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/calendar/QuartersView.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {localeable, LocaleProps} from '../../locale';\nimport {ThemeProps} from '../../theme';\n\nexport interface QuarterViewProps extends LocaleProps, ThemeProps {\n  viewDate: moment.Moment;\n  selectedDate: moment.Moment;\n  inputFormat?: string;\n  updateOn: string;\n  subtractTime: (\n    amount: number,\n    type: string,\n    toSelected?: moment.Moment\n  ) => () => void;\n  addTime: (\n    amount: number,\n    type: string,\n    toSelected?: moment.Moment\n  ) => () => void;\n  setDate: (type: string) => () => void;\n  showView: (view: string) => () => void;\n  updateSelectedDate: (e: any, close?: boolean) => void;\n  renderQuarter: any;\n  isValidDate: any;\n}\n\nexport class QuarterView extends React.Component<QuarterViewProps> {\n  alwaysValidDate: any;\n\n  renderYear() {\n    const __ = this.props.translate;\n    const showYearHead = !/^mm$/i.test(this.props.inputFormat || '');\n\n    if (!showYearHead) {\n      return null;\n    }\n\n    const canClick = /yy/i.test(this.props.inputFormat || '');\n\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th\n              className=\"rdtPrev\"\n              onClick={this.props.subtractTime(1, 'years')}\n            >\n              «\n            </th>\n            {canClick ? (\n              <th className=\"rdtSwitch\" onClick={this.props.showView('years')}>\n                {this.props.viewDate.format(__('dateformat.year'))}\n              </th>\n            ) : (\n              <th className=\"rdtSwitch\">\n                {this.props.viewDate.format(__('dateformat.year'))}\n              </th>\n            )}\n\n            <th className=\"rdtNext\" onClick={this.props.addTime(1, 'years')}>\n              »\n            </th>\n          </tr>\n        </thead>\n      </table>\n    );\n  }\n  renderQuarters() {\n    let date = this.props.selectedDate,\n      month = this.props.viewDate.month(),\n      year = this.props.viewDate.year(),\n      rows = [],\n      i = 1,\n      months = [],\n      renderer = this.props.renderQuarter || this.renderQuarter,\n      isValid = this.props.isValidDate || this.alwaysValidDate,\n      classes,\n      props: any,\n      currentMonth: moment.Moment,\n      isDisabled,\n      noOfDaysInMonth,\n      daysInMonth,\n      validDay,\n      // Date is irrelevant because we're only interested in month\n      irrelevantDate = 1;\n    while (i < 5) {\n      classes = 'rdtQuarter';\n      currentMonth = this.props.viewDate\n        .clone()\n        .set({year: year, quarter: i, date: irrelevantDate});\n\n      noOfDaysInMonth = currentMonth.endOf('quarter').format('Q');\n      daysInMonth = Array.from(\n        {length: parseInt(noOfDaysInMonth, 10)},\n        function (e, i) {\n          return i + 1;\n        }\n      );\n\n      validDay = daysInMonth.find(function (d) {\n        var day = currentMonth.clone().set('date', d);\n        return isValid(day);\n      });\n\n      isDisabled = validDay === undefined;\n\n      if (isDisabled) classes += ' rdtDisabled';\n\n      if (date && i === date.quarter() && year === date.year())\n        classes += ' rdtActive';\n\n      props = {\n        'key': i,\n        'data-value': i,\n        'className': classes\n      };\n\n      if (!isDisabled) {\n        props.onClick =\n          this.props.updateOn === 'quarters'\n            ? this.updateSelectedQuarter\n            : this.props.setDate('quarter');\n      }\n\n      months.push(renderer(props, i, year, date && date.clone()));\n\n      if (months.length === 2) {\n        rows.push(\n          React.createElement('tr', {key: month + '_' + rows.length}, months)\n        );\n        months = [];\n      }\n\n      i++;\n    }\n\n    return rows;\n  }\n\n  renderQuarter = (\n    props: any,\n    quartar: number,\n    year: number,\n    date: moment.Moment\n  ) => {\n    return (\n      <td {...props}>\n        <span>Q{quartar}</span>\n      </td>\n    );\n  };\n\n  updateSelectedQuarter = (event: any) => {\n    this.props.updateSelectedDate(event);\n  };\n\n  render() {\n    const {classnames: cx} = this.props;\n\n    return (\n      <div className={cx('ClalendarQuarter')}>\n        {this.renderYear()}\n        <table>\n          <tbody>{this.renderQuarters()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default localeable(QuarterView);\n"
    ]
}