{
    "version": 3,
    "file": "TimeView.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/calendar/TimeView.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "// @ts-ignore\nimport TimeView from 'react-datetime/src/TimeView';\nimport moment from 'moment';\nimport React from 'react';\nimport {LocaleProps, localeable} from '../../locale';\nimport {Icon} from '../icons';\nimport {ClassNamesFn} from '../../theme';\n\nexport class CustomTimeView extends TimeView {\n  props: {\n    viewDate: moment.Moment;\n    subtractTime: (\n      amount: number,\n      type: string,\n      toSelected?: moment.Moment\n    ) => () => void;\n    addTime: (\n      amount: number,\n      type: string,\n      toSelected?: moment.Moment\n    ) => () => void;\n    showView: (view: string) => () => void;\n    timeFormat: string;\n    classnames: ClassNamesFn;\n    setTime: (type: string, value: any) => void;\n  } & LocaleProps;\n  onStartClicking: any;\n  disableContextMenu: any;\n  updateMilli: any;\n  renderHeader: any;\n  pad: any;\n  state: {daypart: any; counters: Array<string>; [propName: string]: any};\n  timeConstraints: any;\n  padValues = {\n    hours: 2,\n    minutes: 2,\n    seconds: 2,\n    milliseconds: 3\n  };\n\n  renderDayPart = () => {\n    const {translate: __, classnames: cx} = this.props;\n    return (\n      <div\n        key=\"dayPart\"\n        className={cx('CalendarCounter CalendarCounter--daypart')}\n      >\n        <span\n          key=\"up\"\n          className={cx('CalendarCounter-btn CalendarCounter-btn--up')}\n          onClick={this.onStartClicking('toggleDayPart', 'hours')}\n          onContextMenu={this.disableContextMenu}\n        >\n          <Icon icon=\"right-arrow-bold\" />\n        </span>\n        <div className={cx('CalendarCounter-value')} key={this.state.daypart}>\n          {__(this.state.daypart)}\n        </div>\n        <span\n          key=\"down\"\n          className={cx('CalendarCounter-btn CalendarCounter-btn--down')}\n          onClick={this.onStartClicking('toggleDayPart', 'hours')}\n          onContextMenu={this.disableContextMenu}\n        >\n          <Icon icon=\"right-arrow-bold\" />\n        </span>\n      </div>\n    );\n  };\n\n  renderCounter = (type: string) => {\n    const cx = this.props.classnames;\n    if (type !== 'daypart') {\n      var value = this.state[type];\n      if (\n        type === 'hours' &&\n        this.props.timeFormat.toLowerCase().indexOf(' a') !== -1\n      ) {\n        value = ((value - 1) % 12) + 1;\n\n        if (value === 0) {\n          value = 12;\n        }\n      }\n\n      const {min, max, step} = this.timeConstraints[type];\n\n      return (\n        <div key={type} className={cx('CalendarCounter')}>\n          <span\n            key=\"up\"\n            className={cx('CalendarCounter-btn CalendarCounter-btn--up')}\n            onMouseDown={this.onStartClicking('increase', type)}\n            onContextMenu={this.disableContextMenu}\n          >\n            <Icon icon=\"right-arrow-bold\" />\n          </span>\n\n          <div key=\"c\" className={cx('CalendarCounter-value')}>\n            <input\n              type=\"text\"\n              value={this.pad(type, value)}\n              className={cx('CalendarInput')}\n              min={min}\n              max={max}\n              step={step}\n              onChange={e =>\n                this.props.setTime(\n                  type,\n                  Math.max(\n                    min,\n                    Math.min(\n                      parseInt(e.currentTarget.value.replace(/\\D/g, ''), 10) ||\n                        0,\n                      max\n                    )\n                  )\n                )\n              }\n            />\n          </div>\n\n          <span\n            key=\"do\"\n            className={cx('CalendarCounter-btn CalendarCounter-btn--down')}\n            onMouseDown={this.onStartClicking('decrease', type)}\n            onContextMenu={this.disableContextMenu}\n          >\n            <Icon icon=\"right-arrow-bold\" />\n          </span>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  render() {\n    const counters: Array<JSX.Element | null> = [];\n    const cx = this.props.classnames;\n\n    this.state.counters.forEach(c => {\n      if (counters.length) {\n        counters.push(\n          <div\n            key={`sep${counters.length}`}\n            className={cx('CalendarCounter-sep')}\n          >\n            :\n          </div>\n        );\n      }\n      counters.push(this.renderCounter(c));\n    });\n\n    if (this.state.daypart !== false) {\n      counters.push(this.renderDayPart());\n    }\n\n    if (\n      this.state.counters.length === 3 &&\n      this.props.timeFormat.indexOf('S') !== -1\n    ) {\n      counters.push(\n        <div className={cx('CalendarCounter-sep')} key=\"sep5\">\n          :\n        </div>\n      );\n      counters.push(\n        <div className={cx('CalendarCounter CalendarCounter--milli')}>\n          <input\n            value={this.state.milliseconds}\n            type=\"text\"\n            onChange={this.updateMilli}\n          />\n        </div>\n      );\n    }\n\n    return <div className={cx('CalendarTime')}>{counters}</div>;\n  }\n}\n\nexport default localeable(CustomTimeView as any);\n"
    ]
}