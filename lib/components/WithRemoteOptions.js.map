{
    "version": 3,
    "file": "WithRemoteOptions.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/WithRemoteOptions.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * 让选项类的组件支持远程加载选项。\n *\n * 目前这个逻辑其实在 renderer/form/options 中有\n * 但是那个里面耦合较多，没办法简单的在组件之间相互调用，\n * 所以先单独弄个 hoc 出来，后续再想个更加合理的方案。\n */\nimport React from 'react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport {Api, Payload} from '../types';\nimport {Option, SchemaApi, SchemaTokenizeableString} from '../Schema';\nimport {withStore} from './WithStore';\n\nimport {EnvContext, RendererEnv} from '../env';\n\nimport {flow, Instance, types} from 'mobx-state-tree';\nimport {buildApi, isEffectiveApi} from '../utils/api';\nimport {isPureVariable, resolveVariableAndFilter} from '../utils/tpl-builtin';\nimport {normalizeOptions} from './Select';\nimport {reaction} from 'mobx';\n\nexport const Store = types\n  .model('OptionsStore')\n  .props({\n    fetching: false,\n    errorMsg: '',\n    options: types.frozen<Array<Option>>([]),\n    data: types.frozen({})\n  })\n  .actions(self => {\n    const load: (env: RendererEnv, api: Api, data: any) => Promise<any> = flow(\n      function* (env, api, data) {\n        try {\n          self.fetching = true;\n          const ret: Payload = yield env.fetcher(api, data);\n\n          if (ret.ok) {\n            const data = ret.data || {};\n            let options = data.options || data.items || data.rows || data;\n            (self as any).setOptions(options);\n          } else {\n            throw new Error(ret.msg || 'fetch error');\n          }\n        } catch (e) {\n          self.errorMsg = e.message;\n        } finally {\n          self.fetching = false;\n        }\n      }\n    );\n\n    return {\n      load,\n      setData(data: any) {\n        self.data = data || {};\n      },\n      setOptions(options: any) {\n        options = normalizeOptions(options);\n\n        if (Array.isArray(options)) {\n          self.options = options.concat();\n        }\n      }\n    };\n  });\n\nexport type IStore = Instance<typeof Store>;\n\nexport interface RemoteOptionsProps {\n  options: Array<Option>;\n  loading?: boolean;\n}\n\nexport interface OutterProps {\n  env?: RendererEnv;\n  data: any;\n  source?: SchemaApi | SchemaTokenizeableString;\n  options?: Array<Option>;\n}\n\nexport function withRemoteOptions<\n  T extends React.ComponentType<React.ComponentProps<T> & RemoteOptionsProps>\n>(ComposedComponent: T) {\n  type FinalOutterProps = JSX.LibraryManagedAttributes<\n    T,\n    Omit<React.ComponentProps<T>, keyof RemoteOptionsProps>\n  > &\n    OutterProps;\n\n  const result = hoistNonReactStatic(\n    withStore(() => Store.create())(\n      class extends React.Component<\n        FinalOutterProps & {\n          store: IStore;\n        }\n      > {\n        static displayName = `WithRemoteOptions(${\n          ComposedComponent.displayName || ComposedComponent.name\n        })`;\n        static ComposedComponent = ComposedComponent;\n        static contextType = EnvContext;\n        toDispose: Array<() => void> = [];\n\n        componentDidMount() {\n          const env: RendererEnv = this.props.env || this.context;\n          const {store, source, data, options} = this.props;\n\n          store.setData(data);\n          options && store.setOptions(options);\n\n          if (isPureVariable(source)) {\n            this.syncOptions();\n            this.toDispose.push(\n              reaction(\n                () =>\n                  resolveVariableAndFilter(\n                    source as string,\n                    store.data,\n                    '| raw'\n                  ),\n                () => this.syncOptions()\n              )\n            );\n          } else if (env && isEffectiveApi(source, data)) {\n            this.loadOptions();\n            this.toDispose.push(\n              reaction(\n                () =>\n                  buildApi(source as string, store.data, {\n                    ignoreData: true\n                  }).url,\n                () => this.loadOptions()\n              )\n            );\n          }\n        }\n\n        componentDidUpdate(prevProps: any) {\n          const props = this.props;\n\n          if (props.data !== prevProps.data) {\n            props.store.setData(props.data);\n          }\n        }\n\n        componentWillUnmount() {\n          this.toDispose.forEach(fn => fn());\n          this.toDispose = [];\n        }\n\n        loadOptions() {\n          const env: RendererEnv = this.props.env || this.context;\n          const {store, source, data, options} = this.props;\n\n          if (env && isEffectiveApi(source, data)) {\n            store.load(env, source, data);\n          }\n        }\n\n        syncOptions() {\n          const {store, source, data} = this.props;\n\n          if (isPureVariable(source)) {\n            store.setOptions(\n              resolveVariableAndFilter(source as string, data, '| raw') || []\n            );\n          }\n        }\n\n        render() {\n          const store = this.props.store;\n          const injectedProps: RemoteOptionsProps = {\n            options: store.options,\n            loading: store.fetching\n          };\n\n          return (\n            <ComposedComponent\n              {...(this.props as JSX.LibraryManagedAttributes<\n                T,\n                React.ComponentProps<T>\n              >)}\n              {...injectedProps}\n            />\n          );\n        }\n      }\n    ),\n    ComposedComponent\n  );\n\n  return result as typeof result & {\n    ComposedComponent: T;\n  };\n}\n"
    ]
}