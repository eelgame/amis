{
    "version": 3,
    "file": "SchemaRenderer.js",
    "sourceRoot": "",
    "sources": [
        "/src/SchemaRenderer.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import difference from 'lodash/difference';\nimport omit from 'lodash/omit';\nimport React from 'react';\nimport LazyComponent from './components/LazyComponent';\nimport {\n  filterSchema,\n  loadRenderer,\n  RendererConfig,\n  RendererEnv,\n  RendererProps,\n  resolveRenderer\n} from './factory';\nimport {renderChild, renderChildren} from './Root';\nimport {Schema, SchemaNode} from './types';\nimport {anyChanged, chainEvents} from './utils/helper';\n\ninterface SchemaRendererProps extends Partial<RendererProps> {\n  schema: Schema;\n  $path: string;\n  env: RendererEnv;\n}\n\nconst defaultOmitList = [\n  'type',\n  'name',\n  '$ref',\n  'className',\n  'data',\n  'children',\n  'ref',\n  'visible',\n  'visibleOn',\n  'hidden',\n  'hiddenOn',\n  'disabled',\n  'disabledOn',\n  'component',\n  'detectField',\n  'required',\n  'requiredOn',\n  'syncSuperStore'\n];\n\nexport class SchemaRenderer extends React.Component<SchemaRendererProps, any> {\n  static displayName: string = 'Renderer';\n\n  renderer: RendererConfig | null;\n  ref: any;\n  schema: any;\n  path: string;\n\n  constructor(props: SchemaRendererProps) {\n    super(props);\n    this.refFn = this.refFn.bind(this);\n    this.renderChild = this.renderChild.bind(this);\n    this.reRender = this.reRender.bind(this);\n  }\n\n  componentWillMount() {\n    this.resolveRenderer(this.props);\n  }\n\n  componentWillReceiveProps(nextProps: SchemaRendererProps) {\n    const props = this.props;\n\n    if (\n      props.schema &&\n      nextProps.schema &&\n      (props.schema.type !== nextProps.schema.type ||\n        props.schema.$$id !== nextProps.schema.$$id)\n    ) {\n      this.resolveRenderer(nextProps);\n    }\n  }\n\n  // 限制：只有 schema 除外的 props 变化，或者 schema 里面的某个成员值发生变化才更新。\n  shouldComponentUpdate(nextProps: SchemaRendererProps) {\n    const props = this.props;\n    const list: Array<string> = difference(Object.keys(nextProps), [\n      'schema',\n      'scope'\n    ]);\n\n    if (\n      difference(Object.keys(props), ['schema', 'scope']).length !==\n        list.length ||\n      anyChanged(list, this.props, nextProps)\n    ) {\n      return true;\n    } else {\n      const list: Array<string> = Object.keys(nextProps.schema);\n\n      if (\n        Object.keys(props.schema).length !== list.length ||\n        anyChanged(list, props.schema, nextProps.schema)\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  resolveRenderer(props: SchemaRendererProps, skipResolve = false): any {\n    let schema = props.schema;\n    let path = props.$path;\n\n    if (schema && schema.$ref) {\n      schema = {\n        ...props.resolveDefinitions(schema.$ref),\n        ...schema\n      };\n\n      path = path.replace(/(?!.*\\/).*/, schema.type);\n    }\n\n    if (!skipResolve) {\n      const rendererResolver = props.env.rendererResolver || resolveRenderer;\n      this.renderer = rendererResolver(path, schema, props);\n    }\n\n    return {path, schema};\n  }\n\n  getWrappedInstance() {\n    return this.ref;\n  }\n\n  refFn(ref: any) {\n    this.ref = ref;\n  }\n\n  renderChild(\n    region: string,\n    node?: SchemaNode,\n    subProps: {\n      data?: object;\n      [propName: string]: any;\n    } = {}\n  ) {\n    let {schema, $path, env, ...rest} = this.props;\n\n    if (schema && schema.$ref) {\n      const result = this.resolveRenderer(this.props, true);\n      schema = result.schema;\n      $path = result.path;\n    }\n\n    const omitList = defaultOmitList.concat();\n    if (this.renderer) {\n      const Component = this.renderer.component;\n      Component.propsList &&\n        omitList.push.apply(omitList, Component.propsList as Array<string>);\n    }\n\n    return renderChild(`${$path}${region ? `/${region}` : ''}`, node || '', {\n      ...omit(rest, omitList),\n      ...subProps,\n      data: subProps.data || rest.data,\n      env: env\n    });\n  }\n\n  reRender() {\n    this.resolveRenderer(this.props);\n    this.forceUpdate();\n  }\n\n  render(): JSX.Element | null {\n    let {$path, schema, ...rest} = this.props;\n\n    if (schema === null) {\n      return null;\n    }\n\n    if (schema.$ref) {\n      const result = this.resolveRenderer(this.props, true);\n      schema = result.schema;\n      $path = result.path;\n    }\n\n    const theme = this.props.env.theme;\n\n    if (Array.isArray(schema)) {\n      return renderChildren($path, schema as any, rest) as JSX.Element;\n    } else if (schema.children) {\n      return React.isValidElement(schema.children)\n        ? schema.children\n        : (schema.children as Function)({\n            ...rest,\n            $path: $path,\n            render: this.renderChild,\n            forwardedRef: this.refFn\n          });\n    } else if (typeof schema.component === 'function') {\n      const isSFC = !(schema.component.prototype instanceof React.Component);\n      return React.createElement(schema.component as any, {\n        ...rest,\n        ...schema,\n        $path: $path,\n        ref: isSFC ? undefined : this.refFn,\n        forwardedRef: isSFC ? this.refFn : undefined,\n        render: this.renderChild\n      });\n    } else if (Object.keys(schema).length === 0) {\n      return null;\n    } else if (!this.renderer) {\n      return (\n        <LazyComponent\n          {...rest}\n          getComponent={async () => {\n            const result = await rest.env.loadRenderer(\n              schema,\n              $path,\n              this.reRender\n            );\n            if (result && typeof result === 'function') {\n              return result;\n            } else if (result && React.isValidElement(result)) {\n              return () => result;\n            }\n\n            this.reRender();\n            return () => loadRenderer(schema, $path);\n          }}\n          $path={$path}\n          retry={this.reRender}\n        />\n      );\n    }\n\n    const renderer = this.renderer as RendererConfig;\n    schema = filterSchema(schema, renderer, rest);\n    const {data: defaultData, ...restSchema} = schema;\n    const Component = renderer.component;\n\n    return (\n      <Component\n        {...theme.getRendererConfig(renderer.name)}\n        {...restSchema}\n        {...chainEvents(rest, restSchema)}\n        defaultData={defaultData}\n        $path={$path}\n        ref={this.refFn}\n        render={this.renderChild}\n      />\n    );\n  }\n}\n"
    ]
}